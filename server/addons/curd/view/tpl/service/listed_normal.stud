    /**
     * {$table.table_comment}åˆ—è¡¨
     *
     * @return array
     * @throws DbException
     * @author {$table.author} ;#;
     */
    public static function lists(): array
    {
{if !empty($searchArr)}
        self::setSearch([
{foreach $searchArr as $key=>$fieldsArr}
            '{$key|raw}' => {php}echo str_replace('"', '\'', json_encode($fieldsArr));{/php},
{/foreach}
        ]);
;#;
{/if}
        $model = new {$table.gen_model}();
        $lists = $model
{if !empty($listIgnore)}
            ->withoutField({php}echo str_replace('"', '\'', json_encode($listIgnore));{/php})
{/if}
{if in_array('is_delete', $fieldsArr)}
            ->where(['is_delete'=>0])
{/if}
{if !empty($searchArr)}
            ->where(self::$searchWhere)
{/if}
            ->order('{$primaryKey} desc')
{if $table.tpl_type == 'curd'}
            ->paginate([
                'page'      => $get['page']  ?? 1,
                'list_rows' => $get['limit'] ?? 20,
                'var_page'  => 'page'
            ])->toArray();
{else}
            ->select()->toArray();
{/if}
;#;
{if $table.tpl_type == 'curd'}
        return ['count'=>$lists['total'], 'list'=>$lists['data']] ?? [];
{else}
        return $lists;
{/if}
    }