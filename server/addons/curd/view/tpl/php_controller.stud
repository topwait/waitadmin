<%%%?php


namespace app\backend\controller\content2;


use app\backend\service\content\ArticleService;
use app\backend\service\content\CategoryService;
use app\backend\validate\content\ArticleValidate;
use app\backend\validate\PageValidate;
use app\common\basics\Backend;
use app\common\exception\OperateException;
use app\common\utils\AjaxUtils;
use think\db\exception\DataNotFoundException;
use think\db\exception\DbException;
use think\db\exception\ModelNotFoundException;
use think\response\Json;
use think\response\View;
;#;

/**
 * 文章管理
 *
 * Class ArchivesController
 * @package app\backend\controller\content
 */
class {$table.gen_class}Controller extends Backend
{
    /**
     * {$table.table_comment}列表
     *
     * @return Json|View
     * @throws DbException
     {if $table.author}* @author {$table.author}{/if} ;#;
     */
    public function index()
    {
        if ($this->isAjaxGet()) {
            (new PageValidate())->goCheck();
            $list = {$table.gen_class}Service::lists();
            return AjaxUtils::success($list);
        }

        return view();
    }

    /**
     * {$table.table_comment}新增
     *
     * @return Json|View
     * @throws DbException
     * @throws DataNotFoundException
     * @throws ModelNotFoundException
     * @author windy
     */
    public function add()
    {
        if ($this->isAjaxPost()) {
            (new {$table.gen_class}Validate())->addCheck();
            {$table.gen_class}Service::add($this->request->post());
            return AjaxUtils::success();
        }

        return view();
    }

    /**
     * {$table.table_comment}编辑
     *
     * @return Json|View
     * @throws DataNotFoundException
     * @throws DbException
     * @throws ModelNotFoundException
     * @throws OperateException
     * @author windy
     */
    public function edit()
    {
        if ($this->isAjaxPost()) {
            (new {$table.gen_class}Validate())->editCheck();
            {$table.gen_class}Service::edit($this->request->post());
            return AjaxUtils::success();
        }

        (new ArticleValidate())->idCheck();
        $id = $this->request->get('id');

        return view('', [
            'detail'   => ArticleService::detail($id)
        ]);
    }

    /**
     * {$table.table_comment}删除
     *
     * @return Json
     * @author windy
     */
    public function del()
    {
        if ($this->isAjaxPost()) {
            (new {$table.gen_class}Validate())->idCheck();
            {$table.gen_class}Service::del($this->request->post('id'));
            return AjaxUtils::success();
        }

        return AjaxUtils::error();
    }
}